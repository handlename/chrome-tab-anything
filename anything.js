// Generated by CoffeeScript 1.3.3
var Item, KeyHandler, List, STATE, puts;

puts = function(message) {
  return console.log(message);
};

STATE = {
  NORMAL: 1,
  HIDDEN: 2,
  SELECTED: 4
};

Item = (function() {

  Item.prototype.doc = null;

  Item.prototype.tab = null;

  Item.prototype.element = null;

  Item.prototype.state = null;

  function Item(doc, tab) {
    this.doc = doc;
    this.tab = tab;
    this.state = STATE.NORMAL;
    this.element = this.doc.createElement('li');
    this.element.innerHTML = this.tab.title;
    this.select(false);
    this.show(true);
  }

  Item.prototype.select = function(yesNo) {
    if (yesNo === true) {
      this.state = STATE.SELECTED;
      return this.element.setAttribute('class', 'selected');
    } else {
      this.state = STATE.NORMAL;
      return this.element.setAttribute('class', '');
    }
  };

  Item.prototype.show = function(yesNo) {
    return this.state = yesNo === true ? STATE.NORMAL : STATE.HIDDEN;
  };

  return Item;

})();

List = (function() {

  List.prototype.element = null;

  List.prototype.items = [];

  function List(doc, element) {
    this.doc = doc;
    this.element = element;
  }

  List.prototype.addItem = function(item) {
    return this.items.push(item);
  };

  List.prototype.clear = function() {
    return this.element.innerHTML = '';
  };

  List.prototype.refresh = function() {
    var item, _i, _len, _ref, _results;
    this.clear();
    _ref = this.items;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      _results.push(this.element.appendChild(item.element));
    }
    return _results;
  };

  return List;

})();

KeyHandler = (function() {

  KeyHandler.prototype.element = null;

  function KeyHandler(targetElement) {}

  KeyHandler.prototype.check = function(event) {};

  KeyHandler.prototype.onEnter = function(callback) {};

  KeyHandler.prototype.onSelectPrev = function(callback) {};

  KeyHandler.prototype.onSelectNext = function(callback) {};

  KeyHandler.prototype.onOthers = function(callback) {};

  return KeyHandler;

})();

window.addEventListener('load', function() {
  var doc, list;
  doc = window.document;
  list = new List(doc, doc.getElementById('list'));
  return chrome.tabs.getAllInWindow(function(tabs) {
    var item, tab, _i, _len;
    for (_i = 0, _len = tabs.length; _i < _len; _i++) {
      tab = tabs[_i];
      item = new Item(doc, tab);
      list.addItem(item);
    }
    return list.refresh();
  });
});
